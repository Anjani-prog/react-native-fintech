import {Dimensions} from 'react-native';

const {width, height} = Dimensions.get('window');
const [shortDimension, longDimension] =
  width < height ? [width, height] : [height, width];

//Default guideline sizes are based on standard ~5" screen mobile device
const guidelineBaseWidth = 350;
const guidelineBaseHeight = 680;

export const scale = size => (shortDimension / guidelineBaseWidth) * size;
export const verticalScale = size =>
  (longDimension / guidelineBaseHeight) * size;
export const moderateScale = (size, factor = 0.25) =>
  size + (scale(size) - size) * factor;

export const s = scale;
export const vs = verticalScale;
export const ms = moderateScale;

export const screen_height = height;
export const screen_width = width;

export default {
  screen_height: height,
  screen_width: width,
  msQuarter: moderateScale(0.25),
  msHalf: moderateScale(0.5),
  msPointEight: moderateScale(0.8),
  ms0: moderateScale(0),
  ms1: moderateScale(1),
  ms2: moderateScale(2),
  ms3: moderateScale(3),
  ms4: moderateScale(4),
  ms5: moderateScale(5),
  ms6: moderateScale(6),
  ms7: moderateScale(7),
  ms8: moderateScale(8),
  ms9: moderateScale(9),
  ms10: moderateScale(10),
  ms11: moderateScale(11),
  ms12: moderateScale(12),
  ms13: moderateScale(13),
  ms14: moderateScale(14),
  ms14_5: moderateScale(14.5),
  ms15: moderateScale(15),
  ms16: moderateScale(16),
  ms16_16: moderateScale(16.16),
  ms17: moderateScale(17),
  ms18: moderateScale(18),
  ms19: moderateScale(19),
  ms20: moderateScale(20),
  ms21: moderateScale(21),
  ms22: moderateScale(22),
  ms23: moderateScale(23),
  ms24: moderateScale(24),
  ms25: moderateScale(25),
  ms28: moderateScale(28),
  ms30: moderateScale(30),
  ms32: moderateScale(32),
  ms33: moderateScale(33),
  ms34: moderateScale(34),
  ms30_34: moderateScale(30.34),
  ms35: moderateScale(35),
  ms38: moderateScale(38),
  ms40: moderateScale(40),
  ms44: moderateScale(44),
  ms45: moderateScale(45),
  ms48: moderateScale(48),
  ms50: moderateScale(50),
  ms52: moderateScale(52),
  ms54: moderateScale(54),
  ms55: moderateScale(55),
  ms60: moderateScale(60),
  ms63: moderateScale(63),
  ms65: moderateScale(66),
  ms70: moderateScale(70),
  ms75: moderateScale(75),
  ms78: moderateScale(78),
  msMinus75: moderateScale(-75),
  msMinus100: moderateScale(-100),
  msMinus18: moderateScale(-18),
  ms80: moderateScale(80),
  ms82: moderateScale(82),
  ms90: moderateScale(90),
  ms95: moderateScale(95),
  ms96: moderateScale(96.66),
  ms100: moderateScale(100),
  ms104: moderateScale(104),
  ms114: moderateScale(114),
  ms120: moderateScale(120),
  ms125: moderateScale(125),
  ms150: moderateScale(150),
  ms200: moderateScale(200),
  ms230: moderateScale(230),
  ms250: moderateScale(250),
  ms225: moderateScale(225),
  vs35: verticalScale(35),
  vs400: verticalScale(400),
  ms400: moderateScale(400),
  vs200: verticalScale(200),
  ms270: moderateScale(270),
  vs42: verticalScale(42),
  vs180: verticalScale(180),
  msMinus20: moderateScale(-20),
  msPointThree: moderateScale(0.3),
  vs18: verticalScale(18),
  msMinusFive: moderateScale(-5),
  msMinusTwo: moderateScale(-2),
  msMinusFifteen: moderateScale(-15),
  msMinus10: moderateScale(-10),
  msPointSevenFive: moderateScale(17.5),
  msMinus30: moderateScale(-30),
  msMinus35: moderateScale(-35),
  ms83: moderateScale(83),
  ms85: moderateScale(85),
  ms128: moderateScale(128),
  ms130: moderateScale(130),
  ms110: moderateScale(110),
  ms26: moderateScale(26),
  ms140: moderateScale(140),
  ms143: moderateScale(143),
  ms144: moderateScale(144),
  ms132: moderateScale(132),
  ms137: moderateScale(137),
  ms580: moderateScale(560),
  ms210: moderateScale(210),
  ms41: moderateScale(43),
  ms170: moderateScale(170),
  ms180: moderateScale(180),
  ms154: moderateScale(154),
  ms161: moderateScale(161),
  ms277: moderateScale(277),
  ms373: moderateScale(373),
  ms375: moderateScale(375),
  ms263: moderateScale(263),
  ms258: moderateScale(258),
  ms243: moderateScale(243),
  ms290: moderateScale(290),
  ms300: moderateScale(300),
  ms343: moderateScale(343),
  ms110_65: moderateScale(110.65),
  ms27: moderateScale(27),
  ms33: moderateScale(33),
  ms58: moderateScale(58),
  ms64: moderateScale(64),
  ms66: moderateScale(66),
  ms89: moderateScale(89),
  ms115: moderateScale(115),
  ms116: moderateScale(116),
  ms117: moderateScale(117),
  ms118: moderateScale(118),
  ms119: moderateScale(119),
  ms205: moderateScale(205),
  ms220: moderateScale(220),
  ms266: moderateScale(266),
  ms308: moderateScale(308),
  ms168: moderateScale(168),
  ms195: moderateScale(195),
  ms350: moderateScale(350),
  ms245: moderateScale(245),
  ms325: moderateScale(325),
  ms315: moderateScale(315),
  ms364: moderateScale(364),
  ms420: moderateScale(420),
};
